from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
import time

# Initialize WebDriver
chrome_options = Options()
chrome_options.add_argument("--headless")  # Run headless if you don't want browser UI
service = Service("/path/to/chromedriver")  # Update the path to your WebDriver
driver = webdriver.Chrome(service=service, options=chrome_options)

# Test case 1: Homepage Functionality
def test_homepage_functionality():
    driver.get("https://www.lemonade.com")
    
    # Wait for page to load
    start_time = time.time()
    driver.implicitly_wait(5)
    
    # Check page load time
    load_time = time.time() - start_time
    assert load_time <= 8, f"Page took too long to load: {load_time} seconds"
    
    # Verify essential elements (navigation menu, logo, CTA buttons)
    logo = driver.find_element(By.CSS_SELECTOR, "img[alt='Lemonade logo']")
    assert logo.is_displayed(), "Logo not visible"
    
    navigation_menu = driver.find_element(By.TAG_NAME, "nav")
    assert navigation_menu.is_displayed(), "Navigation menu not visible"
    
    cta_button = driver.find_element(By.XPATH, "//button[contains(text(), 'Get a Quote')]")
    assert cta_button.is_displayed(), "Call-to-action button not visible"
    
    # Check for 404 or 500 errors in browser logs
    logs = driver.get_log("browser")
    assert len(logs) == 0, "Errors found in browser logs"

# Test case 2: Validate Form Submission
def test_form_submission():
    driver.get("https://www.lemonade.com")
    
    # Navigate to the form page (assuming the form is accessed by clicking 'Get a Quote')
    get_quote_button = driver.find_element(By.XPATH, "//button[contains(text(), 'Get a Quote')]")
    get_quote_button.click()
    
    driver.implicitly_wait(5)
    
    # Fill in form fields (example: name, email,Phone number, Zip Code, address)
    name_field = driver.find_element(By.NAME, "name")
    email_field = driver.find_element(By.NAME, "email")
    PhoneNumber_field = driver.find_element(By.Name, "Phone Number")
    ZipCode_field = driver.find_element(By.Name, "Zip Code")
    address_field = driver.find_element(By.NAME, "address")
    
    
    name_field.send_keys("John Doe")
    email_field.send_keys("john.doe@example.com")
    PhoneNumber_field.send_keys("445-656-8956")
    ZipCode_field.send_keys("56987")
    address_field.send_keys("333 Clun St")
    
    # Submit the form
    submit_button = driver.find_element(By.XPATH, "//button[@type='submit']")
    submit_button.click()
    
    # Verify successful submission or redirection
    success_message = driver.find_element(By.XPATH, "//p[contains(text(), 'success')]")
    assert success_message.is_displayed(), "Form submission failed"

# Test case 3: Navigation Link Functionality
def test_navigation_links():
    driver.get("https://www.lemonade.com")
    
    # Click and verify 'About' link
    about_link = driver.find_element(By.LINK_TEXT, "About")
    about_link.click()
    assert "about" in driver.current_url, "Did not navigate to About page"
    
    driver.back()
    
    # Click and verify 'Careers' link
    careers_link = driver.find_element(By.LINK_TEXT, "Careers")
    careers_link.click()
    assert "careers" in driver.current_url, "Did not navigate to Careers page"
    
    driver.back()
    
    # Click and verify 'FAQs' link
    faqs_link = driver.find_element(By.LINK_TEXT, "FAQs")
    faqs_link.click()
    assert "faq" in driver.current_url, "Did not navigate to FAQs page"
    
    # Ensure no errors in the process
    logs = driver.get_log("browser")
    assert len(logs) == 0, "Errors found while navigating links"

# Test case 4: Responsive Design Across Devices
def test_responsive_design():
    driver.get("https://www.lemonade.com")
    
    # Desktop resolution (1920x1080)
    driver.set_window_size(1920, 1080)
    assert driver.find_element(By.TAG_NAME, "nav").is_displayed(), "Navigation not visible on desktop"
    
    # Tablet resolution (768x1024)
    driver.set_window_size(768, 1024)
    assert driver.find_element(By.TAG_NAME, "nav").is_displayed(), "Navigation not visible on tablet"
    
    # Mobile resolution (375x667)
    driver.set_window_size(375, 667)
    hamburger_menu = driver.find_element(By.CSS_SELECTOR, "button.hamburger")
    assert hamburger_menu.is_displayed(), "Hamburger menu not visible on mobile"
    
    # No elements should overlap or break
    page_elements = driver.find_elements(By.CSS_SELECTOR, "*")
    for element in page_elements:
        assert element.is_displayed(), "Some elements are not visible on smaller screens"

# Running the tests
try:
    test_homepage_functionality()
    print("Test 1 passed: Homepage Functionality")
    
    test_form_submission()
    print("Test 2 passed: Form Submission")
    
    test_navigation_links()
    print("Test 3 passed: Navigation Links")
    
    test_responsive_design()
    print("Test 4 passed: Responsive Design")
    
finally:
    driver.quit()  # Close the browser after tests
